// finished at 2023/05/08
// wrote by C++
// Runtime beats 24.89%
// Memory beats 64.14%

class Solution {
public:
    int numWays(string s) {
        int mod = 1000000007;
        int sum = 0;
        long long int n = s.size();
    
        for(int i = 0; i < n; i++) {
            sum += (s[i]-'0');
        }
        
        if(sum % 3 != 0) return 0;
        if(sum == 0) return (((n-2) * (n-1)) / 2) % mod;

        long long int first_cut = 0;
        int second_cut = 0;
        int k = sum / 3;
        int c = 0;
        
        for(int i = 0; i < n; i++) {
            if(s[i] == '1') c++;
            if(c == k) first_cut++;
            if(c == k * 2) second_cut++;
        }
        
        first_cut = (first_cut * second_cut) % mod;
        return first_cut;
    }
};
