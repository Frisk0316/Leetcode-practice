/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
 
 // wrote at 2023.05.03 used C++
 // Time: beats 68.21%
 // Memory: beats 48.43%
 
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
			if(list1 == NULL) return list2;
			if(list2 == NULL) return list1;

			if(list1->val <= list2 -> val) {
				list1->next = mergeTwoLists(list1->next, list2);
				return list1;
			}
			else {
				list2->next = mergeTwoLists(list2->next, list1);
				return list2;
			}
		}
};
