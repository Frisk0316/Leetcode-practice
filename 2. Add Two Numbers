/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
 
 // wrote at 2023.05.03 used C++
 // Time: beats 67.64%
 // Memory: beats 53.77%
 
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        
        ListNode *result = new ListNode();
        ListNode *temp = result;

        int carry = 0; // 記錄進位與否, 起始值為0
        while( l1 != NULL || l2 != NULL || carry) {
            int sum = 0;
            
            if(l1 != NULL) {
                sum += l1->val;
                l1 = l1->next;
            }
            if(l2 != NULL) {
                sum += l2->val;
                l2 = l2->next;
            }

            sum += carry;
            carry = sum / 10;

            ListNode *newnode = new ListNode(sum % 10);
            temp->next = newnode;
            temp = temp->next;
        }

        return result->next; // 排除最前端的 0
        
        }
};
